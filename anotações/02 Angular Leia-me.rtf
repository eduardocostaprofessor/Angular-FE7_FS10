{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17760\viewh11180\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs48 \cf0 Componente:\
	Template - Exibi\'e7\'e3o dos dados/conte\'fados\
	Estiliza\'e7\'e3o - Apar\'eancia em si - CSS\
	Classe - Manipula os dados da p\'e1gina\
	Servi\'e7es - ** comunica\'e7\'e3o com API`s externas/back end\
\
************* RESUMO - PASSOS MACROS ***********************\
Criar o componente 
\f1\b views/login
\f0\b0  \
Criar o HTML do Form\uc0\u8232 Adicionar e importar o m\'f3dulo 
\f1\b FormsModule
\f0\b0  no (
\f1\b app.module.ts)
\f0\b0 \
Criar a classe modelo userModel - 
\f1\b ng generate class models/user
\f0\b0 \
Declarar/Instanciar 
\f1\b userModel
\f0\b0  na classe Login (
\f1\b login.component.ts
\f0\b0 )\
Vincular os inputs do Form com 
\f1\b [(ngModel)]=\'93user.Model.email\'94 
\f0\b0 e adicionar o atributo 
\f1\b name
\f0\b0  no campo\
Vincular Evento ngSubmit 
\f1\b (ngSubmit)=\'93receberDados()\'94
\f0\b0 \
Criar a fun\'e7\'e3o receberDados() no 
\f1\b login.component.ts
\f0\b0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 receberDados()\{\
	console.log(
\f1\b this.
\f0\b0 userModel);\
	console.log(this.userModel.nome);\
	console.log(this.userModel.senha);\
\}
\fs26 \
}